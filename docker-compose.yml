version: '3.8'

services:
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      - redis
      - rabbitmq
    networks:
      - clickguard-network

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - clickguard-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - clickguard-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - clickguard-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=clickguard
      - POSTGRES_USER=clickguard
      - POSTGRES_PASSWORD=clickguard123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - clickguard-network

volumes:
  redis-data:
  rabbitmq-data:
  postgres-data:

networks:
  clickguard-network:
    driver: bridge 